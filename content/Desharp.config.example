<?xml version="1.0" encoding="utf-8"?>
<configuration>
  
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  
  
  <!-- For web applications only - add Desharp http module by: -->
  <system.webServer>
    <modules>
      <add name="Desharp" type="Desharp.Module" />
    </modules>
    <httpErrors errorMode="DetailedLocalOnly" />
  </system.webServer>
  
  
  <appSettings>
    
    <!-- 
      Web debug panel enabled od console priniting enabled
      - not required, recomanded
      - possible values: 1, 0, true, false
      - if not configured - enabled is only when VS debugger is attached or entry assembly is builded as Debug
      - if disabled - all Debug.Log() calls are still enabled, see more option "Desharp:Levels"
    -->
    <add key="Desharp:Enabled" value="1" />
    
    <!--
      Logs content format
      - not required, text by default
      - possible values: html, text
    -->
    <add key="Desharp:Output" value="html" />
    
    <!--
      Client ip adresses list to limit enabled desharp only for some users
      - not required, recomanded
      - possible values: IPv4 or IPv6, separated by comma
      - if not configured and desharp is enabled, then is enabled for all client ips
    -->
    <add key="Desharp:DebugIps" value="127.0.0.1,::1" />
    
    <!--
      Loggin levels to enable/disable to write on hard drive and also to enable/disable for email notification
      - not required, recomanded
      - possible values: exception, debug, info, notice, warning, error, critical, alert, emergency, javascript
      - if not configured, all logging levels are enabled for logging, not enabled for email notification
      - if at least one level is configured, then all other configured levels are disabled for logging and for email notification
      - if you want to enable any logging level - write level name bellow
      - if you want to disable any logging level - put minus (-) character before level name or remove level name
      - if you want to enable any logging level for email notification - put plus (+) character before level name
    -->
    <add key="Desharp:Levels" value="+exception,debug,info,-notice,-warning,+error,+critical,alert,+emergency,javascript" />

    <!--
      Logged messages notification by configured levels
      - not required, recomanded in production mode
      - possible values: 
        - host: required, mail server smtp domain | IPv4 | IPv6
        - port: not required, 25 by default
        - ssl: not required, false by default
        - from: required if no username and password specified, email address to specify sender, if no value specified, there is used username
        - username and password: required if no from sender specified, mail server username/password for sender account, always necessary to use together
        - to: required, recepient email adress or adresses separated by semicolon ';'
        - priority: not required, possible values: 'low' | 'normal' | 'high', 'normal' by defaut
        - timeout: not required, time cpecified in miliseconds, 10000 by default (10 seconds)
    -->
    <add key="Desharp:NotifySettings" value="{
      host: 'smtp.host.com',
      port: 25,
      ssl: false,
      user: 'username',
      password: 'secret',
      from: 'username@host.com',
      to: 'mydaily@mailbox.com',
      priority: 'high',
      timeout: 30000
    }" />
    
    <!--
      Web debug bar panels
      - not required, recomanded
      - full class names separated by comma character
      - all panel classes has to implement abstract class: Desharp.Panels.Abstract
      - build-in panels you can use: Desharp.Panels.Session (Desharp.Panels.Routing - TODO)
      - there are always enabled build-in panels for execution time, dumps and exceptions
    -->
    <add key="Desharp:Panels" value="Desharp.Panels.Routing,Desharp.Panels.Session" />
    
    <!--
      Absolute or relative path from application root directory
      - not required, recomanded
      - relative path from app root has to start with '~/' like: '~/path/to/logs'
      - if not configured, all log files are written into application root directory
    -->
    <add key="Desharp:Directory" value="~/logs" />
    
    <!--
      Milisecond timeout how often logged messages or exceptions are written from RAM to HDD
      - not required, recomanded for speed optimalization in production mode
      - possible values - use digits to define any miliseconds number
      - if not configured, all messages or exceptions are written in singleton background thread immediately
    -->
    <add key="Desharp:WriteMiliseconds" value="5000" />
    
    <!--
      C# object dumping depth
      - not required, recomanded for speed optimalization in production mode
      - possible values: just digit like 3, 4 or 5
      - if not configured, 3 by default
    -->
    <add key="Desharp:Depth" value="3" />
    
    <!--
      Max length for dumped string values
      - not required, recomanded for speed optimalization in production mode
      - possible values: just digit like 512, 1024 or 4000
      - if not configured, 1024 by default
    -->
    <add key="Desharp:MaxLength" value="512" />

    <!--
      Custom web error page
      - not required, recomanded for production mode to be original
      - if desharp is not enabled and there is uncatched exception in your application,
        you can use custom static error page to transfer into client browser
      - if not configured - desharp build-in error page is used by default
    -->
    <add key="Desharp:ErrorPage" value="~/custom-error-page-500.html" />

    <!--
      Dump all backing fields in class instances, created usually for properties 
      and all class instance member types marked with 'CompillerGenerated' attribute.
      - not required, recomanded only for depp development view
      - possible values: 1, 0, true, false
      - if not configured, false by default
      - if not configured or configured as false, you can hide for dumping
        your class members by [CompilerGenerated] attribute
    -->
    <add key="Desharp:DumpCompillerGenerated" value="true" />
    
    <!-- 
      Default editor param value
      - not required, marginal
      - for file opening links by 'editor://file=...&line=...&editor=MSVS2015'
      - possible values: any string key to open your editor from html output by
      - if not configured, value is automaticly detected by Visual Studio instalation on current system
    -->
    <add key="Desharp:Editor" value="MSVS2015" />
    
  </appSettings>
</configuration>